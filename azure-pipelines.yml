# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main


pool:
  name: 'Default'

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      packageType: 'sdk'
      version: '7.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet
  
  - task: PowerShell@2
    displayName: 'List obj and bin directories before cleanup'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Listing obj directory contents before cleanup"
        Get-ChildItem "$(Build.SourcesDirectory)\FunctionAppDevoir2\obj" -Recurse
        Write-Host "Listing bin directory contents before cleanup"
        Get-ChildItem "$(Build.SourcesDirectory)\FunctionAppDevoir2\bin" -Recurse
  - task: PowerShell@2
    displayName: 'Clean up obj and bin folders'
    inputs:
      targetType: 'inline'
      script: |
        Remove-Item -Recurse -Force "$(Build.SourcesDirectory)\FunctionAppDevoir2\obj"
        Remove-Item -Recurse -Force "$(Build.SourcesDirectory)\FunctionAppDevoir2\bin"
      pwsh: true 
  
  - task: PowerShell@2
    displayName: 'List obj and bin directories after cleanup'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Listing obj directory contents after cleanup"
        Get-ChildItem "$(Build.SourcesDirectory)\FunctionAppDevoir2\obj" -Recurse
        Write-Host "Listing bin directory contents after cleanup"
        Get-ChildItem "$(Build.SourcesDirectory)\FunctionAppDevoir2\bin" -Recurse
  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet'
    
  - task: NuGetCommand@2
    displayName: 'Restore NuGet packages'
    inputs:
      restoreSolution: '**/*.sln'
  
  - task: DotNetCoreCLI@2
    displayName: "Build Function App"
    inputs:
      command: 'build'
      projects: '**/*.sln'
      configuration: 'Release'
  
  - task: DotNetCoreCLI@2
    displayName: 'Publish Function App'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      configuration: 'Release'
      zipAfterPublish: true
      publishWebProjects: false
  
  - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)
    displayName: 'Publish Artifact'
    artifact: 'drop'

